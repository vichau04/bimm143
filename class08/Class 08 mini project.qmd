---
title: "Class 8 Mini-Project"
author: Vincent Chau
format: gfm
---

# Preparing the data

```{r}
library(readr)
WisconsinCancer <- read_csv("WisconsinCancer.csv")
View(WisconsinCancer)
```

```{r}
# Save your input data file into your Project directory

fna.data <- "WisconsinCancer.csv"

#Complete the following code to input the data and store as wisc.df

wisc.df <- WisconsinCancer
str(wisc.df)
wisc.df
```

```{r}
# We can use -1 here to remove the first column
wisc.data <- wisc.df[,-1]
wisc.data
```

```{r}
# Create diagnosis vector for later 
diagnosis <- as.numeric(wisc.df$diagnosis == "M")
diagnosis
```

# Exploratory data analysis

> Q1. How many observations are in this dataset?

```{r}
nrow(wisc.data)
```

> Q2. How many of the observations have a malignant diagnosis?

```{r}
sum(diagnosis)
```

> Q3. How many variables/features in the data are suffixed with _mean?

```{r}
library(stringr)
cn <- colnames(wisc.data, do.NULL = TRUE, prefix ="col")
sum(str_count( cn, "_mean"))
```

# Principal Component Analysis

```{r}
# Check column means and standard deviations
wisc.data <- as.matrix(wisc.df[, 3:32])
row.names(wisc.data) <- wisc.df$id
str(wisc.data)
round(colMeans(wisc.data), 2)
```
```{r}
round(apply(wisc.data, 2, sd), 2)
```

```{r}
# Perform PCA on wisc.data by completing the following code
wisc.pr<- prcomp(wisc.data, scale = T)
summary(wisc.pr)

```

> Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?

0.4427

> Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?

```{r}
y <- summary(wisc.pr)
attributes(y)
```

```{r}
sum(y$importance[3,] <= 0.7)
```

> Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?

```{r}
sum(y$importance[3,] <= 0.9)
```

# Interpreting PCA results

> Q7. What stands out to you about this plot? Is it easy or difficult to understand? Why?

There is a lot of dots. It is very difficult to understand the plot because there are too many dots/points for us to understand what's going on.

```{r}
biplot(wisc.pr)
```

```{r}
# Scatter plot observations by components 1 and 2
plot( wisc.pr$x[, c(1, 2)] , col = diagnosis +1 , 
     xlab = "PC1", ylab = "PC2")
```

> Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?

```{r}
# Repeat for components 1 and 3
plot(wisc.pr$x[, c(1,3) ], col = diagnosis +1, 
     xlab = "PC1", ylab = "PC3")
```

# Variance explained

```{r}
# Calculate variance of each component
pr.var <- (wisc.pr$sdev)^2
head(pr.var)
```
```{r}
# Variance explained by each principal component: pve
pve <- pr.var / sum(pr.var)

# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```

```{r}
# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```

# Communicating PCA results

> Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean?

```{r}
wisc.pr$rotation[,1]
```

concave.points_mean: -0.26085376

> Q10. What is the minimum number of principal components required to explain 80% of the variance of the data?

6 principal components.

# Hierarchial clustering

```{r}
# Scale the wisc.data data: data.scaled
data.scaled <- scale(wisc.data)
data.dist <- dist(data.scaled)
wisc.hclust <- hclust(data.dist, method = "complete")
```

# Results of hierarchial clustering

> Q11. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

```{r}
plot(wisc.hclust)
abline(h=19, col="red", lty=2)
```


```{r}
unique(cutree(wisc.hclust, h=19))
```

# Selecting number of clusters

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, k = 6)
table(wisc.hclust.clusters, diagnosis)
```

> Q12. Can you find a better cluster vs diagnoses match by cutting into a different number of clusters between 2 and 10?

cutting it at 5

# Using different methods

> Q13. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.

I like using "complete" because it gives all of the data there in the clustering. Then afterwards adjustment could be made in order to seperate the clusters.

# K-means clustering and comparing results

```{r}
wisc.km <- kmeans(scale(wisc.data), centers = 2, nstart = 20)
table(wisc.km$cluster, diagnosis)
```

>Q14. How well does k-means separate the two diagnoses? How does it compare to your hclust results?

```{r}
table(wisc.hclust.clusters, wisc.km$cluster)
```

k-means separates it better and provides a clearer table since it includes more.

# Clustering on PCA results

```{r}
wisc.pr.hclust <- hclust(dist(wisc.pr$x[, 1:7]), method = "ward.D2")
grps <- cutree(wisc.pr.hclust, k=2)
table(grps)
```

```{r}
table(grps, diagnosis)
```

```{r}
plot(wisc.pr$x[,1:2], col=grps)
```

```{r}
plot(wisc.pr$x[,1:2], col=diagnosis +1)
```

```{r}
g <- as.factor(grps)
levels(g)
```

```{r}
g <- relevel(g,2)
levels(g)
```

```{r}
# Plot using our re-ordered factor 
plot(wisc.pr$x[,1:2], col=g)
```

> Q15. How well does the newly created model with four clusters separate out the two diagnoses?

```{r}
wisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k=2)
# Compare to actual diagnoses
table(wisc.pr.hclust.clusters, diagnosis)
```

> Q16 How well do the k-means and hierarchical clustering models you created in previous sections (i.e. before PCA) do in terms of separating the diagnoses? Again, use the table() function to compare the output of each model (wisc.km$cluster and wisc.hclust.clusters) with the vector containing the actual diagnoses.

```{r}
table(wisc.km$cluster, diagnosis)
table(wisc.hclust.clusters, diagnosis)
```

> Q17. Which of your analysis procedures resulted in a clustering model with the best specificity? How about sensitivity?

Sensitivity:

```{r}
# wisc.km$cluster
175/(175+14)
# wisc.hclust.clusters
165/(165+12)
```

Specificity:

```{r}
# wisc.km$cluster
343/(343+37)

# wisc.hclust.clusters
331/(331+39)
```
The wisc.hclust.clusters had a better score for sensitivity and the wisc.km$cluster had a better score for specificity (although both close together).

# Prediction

> Q18. Which of these new patients should we prioritize for follow up based on your results?

I would prioritize patient 1 because they may have been labeled healthy when they are not healthy. If someone was marked cancerous and was not, then that is more okay then having someone think they are healthy when they are not.